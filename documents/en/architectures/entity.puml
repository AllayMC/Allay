@startuml
Title "Entity"

interface EntityComponentImpl {
    + Identifier getIdentifier()
}

interface HealthComponent {
    + int getHealth()
    + int getMaxHealth()
    + boolean alive()
}

interface AttackComponent {
    + void attack(int amount)
}

interface TameComponent {
    + boolean tame()
    + EntityXXX getOwner()
}

interface AIComponent {
    + BehaviorGroup getBehaviorGroup()
}

interface EntityInitInfo {
    + getWorld()
    + getLocation()
}

class HealthComponentImpl
class AttackComponentImpl
class TameComponentImpl
class AIComponentImpl

HealthComponentImpl ..|> HealthComponent
HealthComponentImpl ..|> EntityComponentImpl

AttackComponentImpl ..|> AttackComponent
AttackComponentImpl ..|> EntityComponentImpl

TameComponentImpl ..|> TameComponent
TameComponentImpl ..|> EntityComponentImpl

AIComponentImpl ..|> AIComponent
AIComponentImpl ..|> EntityComponentImpl

class EntityTypeBuilder {
    + EntityType builder()
}

interface EntityXXX
EntityXXX ..|> HealthComponent
EntityXXX ..|> AttackComponent
EntityXXX ..|> TameComponent
EntityXXX ..|> AIComponent

class EntityType {
    + EntityXXX createEntity(EntityInitInfo)
}

EntityTypeBuilder o-- HealthComponentImpl
EntityTypeBuilder o-- AttackComponentImpl : Passed to EntityBuilder
EntityTypeBuilder o-- TameComponentImpl
EntityTypeBuilder o-- AIComponentImpl

EntityType <- EntityTypeBuilder : Construct EntityType holding Class<Entity> object implementing Entity interface
EntityXXX <- EntityType : Create instance of Entity interface through EntityType

@enduml
