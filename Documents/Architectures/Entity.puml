@startuml
Title "Entity"
interface EntityComponentImpl {
+ Identifier getIdentifier()
}
interface HealthComponent {
+ int getHealth()
+ int getMaxHealth()
+ boolean alive()
}
interface AttackComponent {
+ void attack(int amount)
}
interface TameComponent {
+ boolean tame()
+ EntityXXX getOwner()
}
interface AIComponent {
+ BehaviorGroup getBehaviorGroup()
}
interface EntityInitInfo {
+ getWorld()
+ getLocation()
}
class HealthComponentImpl
class AttackComponentImpl
class TameComponentImpl
class AIComponentImpl
HealthComponentImpl ..|> HealthComponent
HealthComponentImpl ..|> EntityComponentImpl
AttackComponentImpl ..|> AttackComponent
AttackComponentImpl ..|> EntityComponentImpl
TameComponentImpl ..|> TameComponent
TameComponentImpl ..|> EntityComponentImpl
AIComponentImpl ..|> AIComponent
AIComponentImpl ..|> EntityComponentImpl
class EntityTypeBuilder {
+ EntityType builder()
}
interface EntityXXX
EntityXXX ..|> HealthComponent
EntityXXX ..|> AttackComponent
EntityXXX ..|> TameComponent
EntityXXX ..|> AIComponent
class EntityType {
+ EntityXXX createEntity(EntityInitInfo)
}
EntityTypeBuilder o-- HealthComponentImpl
EntityTypeBuilder o-- AttackComponentImpl : 传入到EntityBuilder中 \n Passed to EntityBuilder
EntityTypeBuilder o-- TameComponentImpl
EntityTypeBuilder o-- AIComponentImpl
EntityType <- EntityTypeBuilder : 构建出EntityType，其持有Entity接口的实现类对象(Class<Entity>) \n Constructs EntityType holding the implementation class objects (Class<Entity>)
EntityXXX <- EntityType : 通过EntityType创建Entity接口的实例 \n Creates instances of the Entity interface through EntityType
@enduml