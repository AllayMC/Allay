package cn.allay.block.property.vanilla;

import cn.allay.block.property.type.BlockProperty;
import cn.allay.block.property.type.BooleanProperty;
import cn.allay.block.property.type.EnumProperty;
import cn.allay.block.property.type.IntProperty;
import cn.allay.block.property.vanilla.enums.Attachment;
import cn.allay.block.property.vanilla.enums.BambooLeafSize;
import cn.allay.block.property.vanilla.enums.BambooStalkThickness;
import cn.allay.block.property.vanilla.enums.BigDripleafTilt;
import cn.allay.block.property.vanilla.enums.CauldronLiquid;
import cn.allay.block.property.vanilla.enums.ChemistryTableType;
import cn.allay.block.property.vanilla.enums.ChiselType;
import cn.allay.block.property.vanilla.enums.Color;
import cn.allay.block.property.vanilla.enums.CoralColor;
import cn.allay.block.property.vanilla.enums.CrackedState;
import cn.allay.block.property.vanilla.enums.Damage;
import cn.allay.block.property.vanilla.enums.DirtType;
import cn.allay.block.property.vanilla.enums.DoublePlantType;
import cn.allay.block.property.vanilla.enums.DripstoneThickness;
import cn.allay.block.property.vanilla.enums.FlowerType;
import cn.allay.block.property.vanilla.enums.LeverDirection;
import cn.allay.block.property.vanilla.enums.MonsterEggStoneType;
import cn.allay.block.property.vanilla.enums.NewLeafType;
import cn.allay.block.property.vanilla.enums.OldLeafType;
import cn.allay.block.property.vanilla.enums.PillarAxis;
import cn.allay.block.property.vanilla.enums.PortalAxis;
import cn.allay.block.property.vanilla.enums.PrismarineBlockType;
import cn.allay.block.property.vanilla.enums.SandStoneType;
import cn.allay.block.property.vanilla.enums.SandType;
import cn.allay.block.property.vanilla.enums.SaplingType;
import cn.allay.block.property.vanilla.enums.SeaGrassType;
import cn.allay.block.property.vanilla.enums.SpongeType;
import cn.allay.block.property.vanilla.enums.StoneBrickType;
import cn.allay.block.property.vanilla.enums.StoneSlabType;
import cn.allay.block.property.vanilla.enums.StoneSlabType2;
import cn.allay.block.property.vanilla.enums.StoneSlabType3;
import cn.allay.block.property.vanilla.enums.StoneSlabType4;
import cn.allay.block.property.vanilla.enums.StoneType;
import cn.allay.block.property.vanilla.enums.StructureBlockType;
import cn.allay.block.property.vanilla.enums.StructureVoidType;
import cn.allay.block.property.vanilla.enums.TallGrassType;
import cn.allay.block.property.vanilla.enums.TorchFacingDirection;
import cn.allay.block.property.vanilla.enums.TurtleEggCount;
import cn.allay.block.property.vanilla.enums.WallBlockType;
import cn.allay.block.property.vanilla.enums.WallConnectionTypeEast;
import cn.allay.block.property.vanilla.enums.WallConnectionTypeNorth;
import cn.allay.block.property.vanilla.enums.WallConnectionTypeSouth;
import cn.allay.block.property.vanilla.enums.WallConnectionTypeWest;
import cn.allay.block.property.vanilla.enums.WoodType;
import java.util.List;

/**
 * Author: daoge_cmd <br>
 * Automatically generated by {@link cn.allay.codegen.VanillaBlockPropertyGen} <br>
 * Allay Project <br>
 */
public final class VanillaBlockProperties {
  public static final BooleanProperty ACTIVE = new BooleanProperty("active", false);

  public static final IntProperty AGE = new IntProperty("age", 0, 0, 15);

  public static final BooleanProperty AGE_BIT = new BooleanProperty("age_bit", false);

  public static final BooleanProperty ALLOW_UNDERWATER_BIT = new BooleanProperty("allow_underwater_bit", false);

  public static final BooleanProperty ATTACHED_BIT = new BooleanProperty("attached_bit", false);

  public static final EnumProperty<Attachment> ATTACHMENT = new EnumProperty<>("attachment", Attachment.values()[0]);

  public static final EnumProperty<BambooLeafSize> BAMBOO_LEAF_SIZE = new EnumProperty<>("bamboo_leaf_size", BambooLeafSize.values()[0]);

  public static final EnumProperty<BambooStalkThickness> BAMBOO_STALK_THICKNESS = new EnumProperty<>("bamboo_stalk_thickness", BambooStalkThickness.values()[0]);

  public static final BooleanProperty BIG_DRIPLEAF_HEAD = new BooleanProperty("big_dripleaf_head", false);

  public static final EnumProperty<BigDripleafTilt> BIG_DRIPLEAF_TILT = new EnumProperty<>("big_dripleaf_tilt", BigDripleafTilt.values()[0]);

  public static final IntProperty BITE_COUNTER = new IntProperty("bite_counter", 0, 0, 6);

  public static final IntProperty BLOCK_LIGHT_LEVEL = new IntProperty("block_light_level", 0, 0, 15);

  public static final BooleanProperty BLOOM = new BooleanProperty("bloom", false);

  public static final IntProperty BOOKS_STORED = new IntProperty("books_stored", 0, 0, 63);

  public static final BooleanProperty BREWING_STAND_SLOT_A_BIT = new BooleanProperty("brewing_stand_slot_a_bit", false);

  public static final BooleanProperty BREWING_STAND_SLOT_B_BIT = new BooleanProperty("brewing_stand_slot_b_bit", false);

  public static final BooleanProperty BREWING_STAND_SLOT_C_BIT = new BooleanProperty("brewing_stand_slot_c_bit", false);

  public static final IntProperty BRUSHED_PROGRESS = new IntProperty("brushed_progress", 0, 0, 3);

  public static final BooleanProperty BUTTON_PRESSED_BIT = new BooleanProperty("button_pressed_bit", false);

  public static final BooleanProperty CAN_SUMMON = new BooleanProperty("can_summon", false);

  public static final IntProperty CANDLES = new IntProperty("candles", 0, 0, 3);

  public static final EnumProperty<CauldronLiquid> CAULDRON_LIQUID = new EnumProperty<>("cauldron_liquid", CauldronLiquid.values()[0]);

  public static final EnumProperty<ChemistryTableType> CHEMISTRY_TABLE_TYPE = new EnumProperty<>("chemistry_table_type", ChemistryTableType.values()[0]);

  public static final EnumProperty<ChiselType> CHISEL_TYPE = new EnumProperty<>("chisel_type", ChiselType.values()[0]);

  public static final IntProperty CLUSTER_COUNT = new IntProperty("cluster_count", 0, 0, 3);

  public static final EnumProperty<Color> COLOR = new EnumProperty<>("color", Color.values()[0]);

  public static final BooleanProperty COLOR_BIT = new BooleanProperty("color_bit", false);

  public static final IntProperty COMPOSTER_FILL_LEVEL = new IntProperty("composter_fill_level", 0, 0, 8);

  public static final BooleanProperty CONDITIONAL_BIT = new BooleanProperty("conditional_bit", false);

  public static final EnumProperty<CoralColor> CORAL_COLOR = new EnumProperty<>("coral_color", CoralColor.values()[0]);

  public static final IntProperty CORAL_DIRECTION = new IntProperty("coral_direction", 0, 0, 3);

  public static final IntProperty CORAL_FAN_DIRECTION = new IntProperty("coral_fan_direction", 0, 0, 1);

  public static final BooleanProperty CORAL_HANG_TYPE_BIT = new BooleanProperty("coral_hang_type_bit", false);

  public static final BooleanProperty COVERED_BIT = new BooleanProperty("covered_bit", false);

  public static final EnumProperty<CrackedState> CRACKED_STATE = new EnumProperty<>("cracked_state", CrackedState.values()[0]);

  public static final EnumProperty<Damage> DAMAGE = new EnumProperty<>("damage", Damage.values()[0]);

  public static final BooleanProperty DEAD_BIT = new BooleanProperty("dead_bit", false);

  public static final IntProperty DEPRECATED = new IntProperty("deprecated", 0, 0, 3);

  public static final IntProperty DIRECTION = new IntProperty("direction", 0, 0, 3);

  public static final EnumProperty<DirtType> DIRT_TYPE = new EnumProperty<>("dirt_type", DirtType.values()[0]);

  public static final BooleanProperty DISARMED_BIT = new BooleanProperty("disarmed_bit", false);

  public static final BooleanProperty DOOR_HINGE_BIT = new BooleanProperty("door_hinge_bit", false);

  public static final EnumProperty<DoublePlantType> DOUBLE_PLANT_TYPE = new EnumProperty<>("double_plant_type", DoublePlantType.values()[0]);

  public static final BooleanProperty DRAG_DOWN = new BooleanProperty("drag_down", false);

  public static final EnumProperty<DripstoneThickness> DRIPSTONE_THICKNESS = new EnumProperty<>("dripstone_thickness", DripstoneThickness.values()[0]);

  public static final BooleanProperty END_PORTAL_EYE_BIT = new BooleanProperty("end_portal_eye_bit", false);

  public static final BooleanProperty EXPLODE_BIT = new BooleanProperty("explode_bit", false);

  public static final BooleanProperty EXTINGUISHED = new BooleanProperty("extinguished", false);

  public static final IntProperty FACING_DIRECTION = new IntProperty("facing_direction", 0, 0, 5);

  public static final IntProperty FILL_LEVEL = new IntProperty("fill_level", 0, 0, 6);

  public static final EnumProperty<FlowerType> FLOWER_TYPE = new EnumProperty<>("flower_type", FlowerType.values()[0]);

  public static final IntProperty GROUND_SIGN_DIRECTION = new IntProperty("ground_sign_direction", 0, 0, 15);

  public static final IntProperty GROWING_PLANT_AGE = new IntProperty("growing_plant_age", 0, 0, 25);

  public static final IntProperty GROWTH = new IntProperty("growth", 0, 0, 7);

  public static final BooleanProperty HANGING = new BooleanProperty("hanging", false);

  public static final BooleanProperty HEAD_PIECE_BIT = new BooleanProperty("head_piece_bit", false);

  public static final IntProperty HEIGHT = new IntProperty("height", 0, 0, 7);

  public static final IntProperty HONEY_LEVEL = new IntProperty("honey_level", 0, 0, 5);

  public static final IntProperty HUGE_MUSHROOM_BITS = new IntProperty("huge_mushroom_bits", 0, 0, 15);

  public static final BooleanProperty IN_WALL_BIT = new BooleanProperty("in_wall_bit", false);

  public static final BooleanProperty INFINIBURN_BIT = new BooleanProperty("infiniburn_bit", false);

  public static final BooleanProperty ITEM_FRAME_MAP_BIT = new BooleanProperty("item_frame_map_bit", false);

  public static final BooleanProperty ITEM_FRAME_PHOTO_BIT = new BooleanProperty("item_frame_photo_bit", false);

  public static final IntProperty KELP_AGE = new IntProperty("kelp_age", 0, 0, 25);

  public static final EnumProperty<LeverDirection> LEVER_DIRECTION = new EnumProperty<>("lever_direction", LeverDirection.values()[0]);

  public static final IntProperty LIQUID_DEPTH = new IntProperty("liquid_depth", 0, 0, 15);

  public static final BooleanProperty LIT = new BooleanProperty("lit", false);

  public static final IntProperty MOISTURIZED_AMOUNT = new IntProperty("moisturized_amount", 0, 0, 7);

  public static final EnumProperty<MonsterEggStoneType> MONSTER_EGG_STONE_TYPE = new EnumProperty<>("monster_egg_stone_type", MonsterEggStoneType.values()[0]);

  public static final IntProperty MULTI_FACE_DIRECTION_BITS = new IntProperty("multi_face_direction_bits", 0, 0, 63);

  public static final EnumProperty<NewLeafType> NEW_LEAF_TYPE = new EnumProperty<>("new_leaf_type", NewLeafType.values()[0]);

  public static final BooleanProperty OCCUPIED_BIT = new BooleanProperty("occupied_bit", false);

  public static final EnumProperty<OldLeafType> OLD_LEAF_TYPE = new EnumProperty<>("old_leaf_type", OldLeafType.values()[0]);

  public static final BooleanProperty OPEN_BIT = new BooleanProperty("open_bit", false);

  public static final BooleanProperty OUTPUT_LIT_BIT = new BooleanProperty("output_lit_bit", false);

  public static final BooleanProperty OUTPUT_SUBTRACT_BIT = new BooleanProperty("output_subtract_bit", false);

  public static final BooleanProperty PERSISTENT_BIT = new BooleanProperty("persistent_bit", false);

  public static final EnumProperty<PillarAxis> PILLAR_AXIS = new EnumProperty<>("pillar_axis", PillarAxis.values()[0]);

  public static final EnumProperty<PortalAxis> PORTAL_AXIS = new EnumProperty<>("portal_axis", PortalAxis.values()[0]);

  public static final BooleanProperty POWERED_BIT = new BooleanProperty("powered_bit", false);

  public static final EnumProperty<PrismarineBlockType> PRISMARINE_BLOCK_TYPE = new EnumProperty<>("prismarine_block_type", PrismarineBlockType.values()[0]);

  public static final IntProperty PROPAGULE_STAGE = new IntProperty("propagule_stage", 0, 0, 4);

  public static final BooleanProperty RAIL_DATA_BIT = new BooleanProperty("rail_data_bit", false);

  public static final IntProperty RAIL_DIRECTION = new IntProperty("rail_direction", 0, 0, 9);

  public static final IntProperty REDSTONE_SIGNAL = new IntProperty("redstone_signal", 0, 0, 15);

  public static final IntProperty REPEATER_DELAY = new IntProperty("repeater_delay", 0, 0, 3);

  public static final IntProperty RESPAWN_ANCHOR_CHARGE = new IntProperty("respawn_anchor_charge", 0, 0, 4);

  public static final IntProperty ROTATION = new IntProperty("rotation", 0, 0, 3);

  public static final EnumProperty<SandStoneType> SAND_STONE_TYPE = new EnumProperty<>("sand_stone_type", SandStoneType.values()[0]);

  public static final EnumProperty<SandType> SAND_TYPE = new EnumProperty<>("sand_type", SandType.values()[0]);

  public static final EnumProperty<SaplingType> SAPLING_TYPE = new EnumProperty<>("sapling_type", SaplingType.values()[0]);

  public static final EnumProperty<SeaGrassType> SEA_GRASS_TYPE = new EnumProperty<>("sea_grass_type", SeaGrassType.values()[0]);

  public static final EnumProperty<SpongeType> SPONGE_TYPE = new EnumProperty<>("sponge_type", SpongeType.values()[0]);

  public static final IntProperty STABILITY = new IntProperty("stability", 0, 0, 7);

  public static final BooleanProperty STABILITY_CHECK = new BooleanProperty("stability_check", false);

  public static final EnumProperty<StoneBrickType> STONE_BRICK_TYPE = new EnumProperty<>("stone_brick_type", StoneBrickType.values()[0]);

  public static final EnumProperty<StoneSlabType> STONE_SLAB_TYPE = new EnumProperty<>("stone_slab_type", StoneSlabType.values()[0]);

  public static final EnumProperty<StoneSlabType2> STONE_SLAB_TYPE_2 = new EnumProperty<>("stone_slab_type_2", StoneSlabType2.values()[0]);

  public static final EnumProperty<StoneSlabType3> STONE_SLAB_TYPE_3 = new EnumProperty<>("stone_slab_type_3", StoneSlabType3.values()[0]);

  public static final EnumProperty<StoneSlabType4> STONE_SLAB_TYPE_4 = new EnumProperty<>("stone_slab_type_4", StoneSlabType4.values()[0]);

  public static final EnumProperty<StoneType> STONE_TYPE = new EnumProperty<>("stone_type", StoneType.values()[0]);

  public static final BooleanProperty STRIPPED_BIT = new BooleanProperty("stripped_bit", false);

  public static final EnumProperty<StructureBlockType> STRUCTURE_BLOCK_TYPE = new EnumProperty<>("structure_block_type", StructureBlockType.values()[0]);

  public static final EnumProperty<StructureVoidType> STRUCTURE_VOID_TYPE = new EnumProperty<>("structure_void_type", StructureVoidType.values()[0]);

  public static final BooleanProperty SUSPENDED_BIT = new BooleanProperty("suspended_bit", false);

  public static final EnumProperty<TallGrassType> TALL_GRASS_TYPE = new EnumProperty<>("tall_grass_type", TallGrassType.values()[0]);

  public static final BooleanProperty TOGGLE_BIT = new BooleanProperty("toggle_bit", false);

  public static final BooleanProperty TOP_SLOT_BIT = new BooleanProperty("top_slot_bit", false);

  public static final EnumProperty<TorchFacingDirection> TORCH_FACING_DIRECTION = new EnumProperty<>("torch_facing_direction", TorchFacingDirection.values()[0]);

  public static final BooleanProperty TRIGGERED_BIT = new BooleanProperty("triggered_bit", false);

  public static final EnumProperty<TurtleEggCount> TURTLE_EGG_COUNT = new EnumProperty<>("turtle_egg_count", TurtleEggCount.values()[0]);

  public static final IntProperty TWISTING_VINES_AGE = new IntProperty("twisting_vines_age", 0, 0, 25);

  public static final BooleanProperty UPDATE_BIT = new BooleanProperty("update_bit", false);

  public static final BooleanProperty UPPER_BLOCK_BIT = new BooleanProperty("upper_block_bit", false);

  public static final BooleanProperty UPSIDE_DOWN_BIT = new BooleanProperty("upside_down_bit", false);

  public static final IntProperty VINE_DIRECTION_BITS = new IntProperty("vine_direction_bits", 0, 0, 15);

  public static final EnumProperty<WallBlockType> WALL_BLOCK_TYPE = new EnumProperty<>("wall_block_type", WallBlockType.values()[0]);

  public static final EnumProperty<WallConnectionTypeEast> WALL_CONNECTION_TYPE_EAST = new EnumProperty<>("wall_connection_type_east", WallConnectionTypeEast.values()[0]);

  public static final EnumProperty<WallConnectionTypeNorth> WALL_CONNECTION_TYPE_NORTH = new EnumProperty<>("wall_connection_type_north", WallConnectionTypeNorth.values()[0]);

  public static final EnumProperty<WallConnectionTypeSouth> WALL_CONNECTION_TYPE_SOUTH = new EnumProperty<>("wall_connection_type_south", WallConnectionTypeSouth.values()[0]);

  public static final EnumProperty<WallConnectionTypeWest> WALL_CONNECTION_TYPE_WEST = new EnumProperty<>("wall_connection_type_west", WallConnectionTypeWest.values()[0]);

  public static final BooleanProperty WALL_POST_BIT = new BooleanProperty("wall_post_bit", false);

  public static final IntProperty WEEPING_VINES_AGE = new IntProperty("weeping_vines_age", 0, 0, 25);

  public static final IntProperty WEIRDO_DIRECTION = new IntProperty("weirdo_direction", 0, 0, 3);

  public static final EnumProperty<WoodType> WOOD_TYPE = new EnumProperty<>("wood_type", WoodType.values()[0]);

  public static final List<BlockProperty<?>> VALUES = List.of(ACTIVE, AGE, AGE_BIT, ALLOW_UNDERWATER_BIT, ATTACHED_BIT, ATTACHMENT, BAMBOO_LEAF_SIZE, BAMBOO_STALK_THICKNESS, BIG_DRIPLEAF_HEAD, BIG_DRIPLEAF_TILT, BITE_COUNTER, BLOCK_LIGHT_LEVEL, BLOOM, BOOKS_STORED, BREWING_STAND_SLOT_A_BIT, BREWING_STAND_SLOT_B_BIT, BREWING_STAND_SLOT_C_BIT, BRUSHED_PROGRESS, BUTTON_PRESSED_BIT, CAN_SUMMON, CANDLES, CAULDRON_LIQUID, CHEMISTRY_TABLE_TYPE, CHISEL_TYPE, CLUSTER_COUNT, COLOR, COLOR_BIT, COMPOSTER_FILL_LEVEL, CONDITIONAL_BIT, CORAL_COLOR, CORAL_DIRECTION, CORAL_FAN_DIRECTION, CORAL_HANG_TYPE_BIT, COVERED_BIT, CRACKED_STATE, DAMAGE, DEAD_BIT, DEPRECATED, DIRECTION, DIRT_TYPE, DISARMED_BIT, DOOR_HINGE_BIT, DOUBLE_PLANT_TYPE, DRAG_DOWN, DRIPSTONE_THICKNESS, END_PORTAL_EYE_BIT, EXPLODE_BIT, EXTINGUISHED, FACING_DIRECTION, FILL_LEVEL, FLOWER_TYPE, GROUND_SIGN_DIRECTION, GROWING_PLANT_AGE, GROWTH, HANGING, HEAD_PIECE_BIT, HEIGHT, HONEY_LEVEL, HUGE_MUSHROOM_BITS, IN_WALL_BIT, INFINIBURN_BIT, ITEM_FRAME_MAP_BIT, ITEM_FRAME_PHOTO_BIT, KELP_AGE, LEVER_DIRECTION, LIQUID_DEPTH, LIT, MOISTURIZED_AMOUNT, MONSTER_EGG_STONE_TYPE, MULTI_FACE_DIRECTION_BITS, NEW_LEAF_TYPE, OCCUPIED_BIT, OLD_LEAF_TYPE, OPEN_BIT, OUTPUT_LIT_BIT, OUTPUT_SUBTRACT_BIT, PERSISTENT_BIT, PILLAR_AXIS, PORTAL_AXIS, POWERED_BIT, PRISMARINE_BLOCK_TYPE, PROPAGULE_STAGE, RAIL_DATA_BIT, RAIL_DIRECTION, REDSTONE_SIGNAL, REPEATER_DELAY, RESPAWN_ANCHOR_CHARGE, ROTATION, SAND_STONE_TYPE, SAND_TYPE, SAPLING_TYPE, SEA_GRASS_TYPE, SPONGE_TYPE, STABILITY, STABILITY_CHECK, STONE_BRICK_TYPE, STONE_SLAB_TYPE, STONE_SLAB_TYPE_2, STONE_SLAB_TYPE_3, STONE_SLAB_TYPE_4, STONE_TYPE, STRIPPED_BIT, STRUCTURE_BLOCK_TYPE, STRUCTURE_VOID_TYPE, SUSPENDED_BIT, TALL_GRASS_TYPE, TOGGLE_BIT, TOP_SLOT_BIT, TORCH_FACING_DIRECTION, TRIGGERED_BIT, TURTLE_EGG_COUNT, TWISTING_VINES_AGE, UPDATE_BIT, UPPER_BLOCK_BIT, UPSIDE_DOWN_BIT, VINE_DIRECTION_BITS, WALL_BLOCK_TYPE, WALL_CONNECTION_TYPE_EAST, WALL_CONNECTION_TYPE_NORTH, WALL_CONNECTION_TYPE_SOUTH, WALL_CONNECTION_TYPE_WEST, WALL_POST_BIT, WEEPING_VINES_AGE, WEIRDO_DIRECTION, WOOD_TYPE);

  private VanillaBlockProperties() {
  }

  public static List<BlockProperty<?>> values() {
    return VALUES;
  }
}
