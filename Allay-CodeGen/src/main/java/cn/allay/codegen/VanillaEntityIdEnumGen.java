package cn.allay.codegen;

import cn.allay.dependence.Identifier;
import cn.allay.dependence.StringUtils;
import com.squareup.javapoet.*;
import lombok.SneakyThrows;

import javax.lang.model.element.Modifier;
import java.nio.file.Files;
import java.nio.file.Path;

import static cn.allay.codegen.CodeGen.MAPPED_ENTITY_DATA;

/**
 * @author daoge_cmd <br>
 * @date 2023/5/20 <br>
 * Allay Project <br>
 */
public class VanillaEntityIdEnumGen {
    public static final ClassName API_IDENTIFIER_CLASS = ClassName.get("cn.allay.api.identifier", "Identifier");
    public static final ClassName DEP_IDENTIFIER_CLASS = ClassName.get("cn.allay.dependence", "Identifier");
    public static final ClassName STRING_CLASS = ClassName.get("java.lang", "String");
    public static final ClassName GETTER_CLASS = ClassName.get("lombok", "Getter");

    public static void main(String[] args) {
        generate();
    }

    public static void generate() {
        generateTo("cn.allay.api.data", Path.of("Allay-API/src/main/java/cn/allay/api/data/VanillaEntityId.java"), API_IDENTIFIER_CLASS);
        generateTo("cn.allay.dependence", Path.of("Allay-CodeGen/src/main/java/cn/allay/dependence/VanillaEntityId.java"), DEP_IDENTIFIER_CLASS);
    }

    @SneakyThrows
    protected static void generateTo(String packageName, Path outPutPath, ClassName identifierClassName) {
        TypeSpec.Builder codeBuilder = TypeSpec.enumBuilder("VanillaEntityId")
                .addJavadoc(
                        "@author daoge_cmd <br>\n" +
                        "Automatically generated by {@code cn.allay.codegen.VanillaEntityIdEnumGen} <br>\n" +
                        "Allay Project <br>\n")
                .addModifiers(Modifier.PUBLIC)
                .addField(FieldSpec
                        .builder(identifierClassName, "identifier", Modifier.PRIVATE, Modifier.FINAL)
                        .addAnnotation(GETTER_CLASS)
                        .build())
                .addMethod(MethodSpec.constructorBuilder()
                        .addParameter(STRING_CLASS, "identifier")
                        .addStatement("this.$N = new $T($N)", "identifier", identifierClassName, "identifier")
                        .build()
                );
        for (var entry : MAPPED_ENTITY_DATA.entrySet()) {
            var valueName = StringUtils.fastTwoPartSplit(
                    entry.getKey(),
                    ":",
                    "")[1].toUpperCase();
            codeBuilder.addEnumConstant(valueName, TypeSpec.anonymousClassBuilder("$S", entry.getKey()).build());
        }

        var javaFile = JavaFile.builder(packageName, codeBuilder.build()).build();
        Files.writeString(outPutPath, javaFile.toString());
    }
}
